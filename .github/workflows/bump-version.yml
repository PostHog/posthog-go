name: Bump Version

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'version.go'
      - 'CHANGELOG.md'

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.MAX_APP_ID }}
          private_key: ${{ secrets.MAX_PRIVATE_KEY }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Determine version bump type
        id: bump-type
        env:
          GITHUB_TOKEN: ${{ secrets.POSTHOG_BOT_GITHUB_TOKEN }}
        run: |
          pr_number=$(gh pr list --state merged --json number --limit 1 -q '.[0].number')
          if [[ $(gh pr view $pr_number --json labels -q '.labels[].name' | grep -q "minor") ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        id: bump-version
        run: |
          current_version=$(grep -oP 'const Version = "\K[^"]+' version.go)
          IFS='.' read -ra version_parts <<< "$current_version"
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}

          if [ "${{ steps.bump-type.outputs.type }}" == "minor" ]; then
            new_version="$major.$((minor + 1)).0"
          else
            new_version="$major.$minor.$((patch + 1))"
          fi

          sed -i "s/const Version = \"$current_version\"/const Version = \"$new_version\"/" version.go
          echo "current_version=$current_version" >> $GITHUB_OUTPUT
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG.md
        run: |
          current_version="${{ steps.bump-version.outputs.current_version }}"
          new_version="${{ steps.bump-version.outputs.new_version }}"
          echo -e "## $new_version\n\n* [Full Changelog](https://github.com/PostHog/posthog-go/compare/v${current_version}...v${new_version})\n\n$(cat CHANGELOG.md)" > CHANGELOG.md

      - name: Commit and push changes
        env:
          PAT: ${{ secrets.PAT_WITH_PUSH_ACCESS }}
        run: |
          git config --local user.email "max@posthog.com"
          git config --local user.name "Max Hedgehog"
          git add version.go CHANGELOG.md
          git commit -m "Bump version to ${{ steps.bump-version.outputs.new_version }}"
          git push

      - name: Create tag
        run: |
          git tag v${{ steps.bump-version.outputs.new_version }}
          git push --tags
